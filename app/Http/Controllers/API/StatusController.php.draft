<?php

namespace App\Http\Controllers;

use App\Models\Status;
use Illuminate\Http\Request;

class StatusController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    /**
     * @OA\Get(
     *     path="/status",
     *     tags={"Status"},
     *     summary="Get list of status",
     *       @OA\Parameter(
     *          name="perPage",
     *          required=false,
     *          in="path",
     *      ),
     *    @OA\Parameter(
     *          name="page",
     *          required=false,
     *          in="path",
     *      ),
     *     @OA\Response(response="200",
     *      description="returns list of status with pagination .",
     *      @OA\JsonContent( type="array",
     *         @OA\Items(ref=""))),
     *     @OA\Response(response="403", description="Access denied!.")
     * )
     */
    public function index()
    {
        //
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    /**
     * @OA\Post(
     *      path="/status",
     *      tags={"Status"},
     *      summary="Store new status",
       security={ {"bearer": {} }},
     *      description="Returns status data",
     *      @OA\RequestBody(
     *          required=true,
     *       @OA\JsonContent(ref="")
     *      ),
     *      @OA\Response(
     *          response=201,
     *          description="returns stored status data",
     *        @OA\JsonContent(ref="")
     *       ),
     *      @OA\Response(
     *          response=403,
     *          description="Access denied!"
     *      )
     * )
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Status  $status
     * @return \Illuminate\Http\Response
     */
    /**
     * @OA\Get(
     *      path="/status/{id}",
     *      tags={"Status"},
     *      summary="Get status By Id",
       security={ {"bearer": {} }},
     *      description="Get Individual status data according to status-id",
     *
     *   @OA\Parameter(
     *          name="id",
     *          required=true,
     *          in="path",
     *      ),
     *      @OA\Response(
     *          response=201,
     *          description="returns status data",
     *       @OA\JsonContent(ref="")),
     *       )
     *
     * )
     */
    public function show(Status $status)
    {
        //
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Status  $status
     * @return \Illuminate\Http\Response
     */
    /**
     * @OA\Put(
     *      path="/status/{id}",
     *      tags={"Status"},
     *      summary="Update status",
     *      description="updates status data",
     *
     *   @OA\Parameter(
     *          name="id",
     *          required=true,
     *          in="path",
     *      ),
     *      @OA\RequestBody(
     *          required=true,
     *      @OA\JsonContent(ref="")
     *      ),
     *      @OA\Response(
     *          response=201,
     *          description="returns updated status data",
     *        @OA\JsonContent(ref="")
     *       )
     *
     * )
     */
    public function update(Request $request, Status $status)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Status  $status
     * @return \Illuminate\Http\Response
     */
    /**
     * @OA\Delete(
     *      path="/status/{id}",
     *      tags={"Status"},
     *      summary="Delete status",
     *      description="delete status data",
     *
     *   @OA\Parameter(
     *          name="id",
     *          required=true,
     *          in="path",
     *      ),
     *
     *      @OA\Response(
     *          response=201,
     *          description="Success",
     *       )
     *
     * )
     */
    public function destroy(Status $status)
    {
        //
    }
}
